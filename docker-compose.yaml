version: "3.8"
services:
  postgresql:
    image: postgres:12.1-alpine
    environment:
      POSTGRES_DB: products_db
      POSTGRES_PASSWORD: root_please_change_me
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "wal_level=logical" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
  elasticsearch:
    image: elasticsearch:7.12.1
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 1g
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - network.host=127.0.0.1
      - http.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
  redis:
    image: redis:alpine3.14
    command: redis-server --requirepass redis
    ports:
      - "6379:6379"
  pgsync:
    image: pgsync:latest
    build:
      context: ./docker/pgsync
      dockerfile: Dockerfile
    sysctls:
      - net.ipv4.tcp_keepalive_time=200
      - net.ipv4.tcp_keepalive_intvl=200
      - net.ipv4.tcp_keepalive_probes=5
    links:
      - postgresql
      - elasticsearch
      - redis
    environment:
      PG_HOST: postgresql
      POSTGRES_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: root_please_change_me
      LOG_LEVEL: INFO
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_SCHEME: http
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_AUTH: redis
